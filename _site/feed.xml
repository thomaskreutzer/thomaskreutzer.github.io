<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-06-09T18:49:46-04:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Thomas Kreutzerâ€™s Git Pages Blog</title><subtitle>I am generally a busy person so should I spend time to write this tech blog? I think the answer is yes, it's good to have these items as a reference when I forget what I did a year from now on a project that one time. It's good to share with all you fine people as well. Hopefully I will make more time for these posts in the future. </subtitle><entry><title type="html">NiFi Registry with Kerberos</title><link href="http://localhost:4000/nifi/security/2019/06/09/NiFi-Registry-with-Kerberos.html" rel="alternate" type="text/html" title="NiFi Registry with Kerberos" /><published>2019-06-09T08:27:29-04:00</published><updated>2019-06-09T08:27:29-04:00</updated><id>http://localhost:4000/nifi/security/2019/06/09/NiFi-Registry-with-Kerberos</id><content type="html" xml:base="http://localhost:4000/nifi/security/2019/06/09/NiFi-Registry-with-Kerberos.html">&lt;h3 id=&quot;assumptions&quot;&gt;Assumptions:&lt;/h3&gt;

&lt;p&gt;Many windows environments have Kerberos enabled behind the curtains for you as with the following scenario. In addition we have a one-way trust configured with the Active Directory domain. This article only covers issues I encountered with early versions of NiFi Registry which may be resolved today in anewer version.&lt;/p&gt;

&lt;h3 id=&quot;issue&quot;&gt;Issue:&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/p0a2rC3.png&quot; alt=&quot;Bad Message&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It seems UI is sending more than 8kb of headers size but it may be working fine using curl because its request size did not go beyond 8kb. You may want to increase max request header size to 16kb. You need to update the config in &lt;strong&gt;/var/lib/ambari-server/resources/common-services/REGISTRY/0.3.0/package/templates/registry.yaml.j2&lt;/strong&gt;, restart ambari-server and registry. This change should be reflected in &lt;strong&gt;/usr/hdf/current/registry/conf/registry.yaml&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I am trying 16KiB&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;na&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;applicationConnectors&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;http&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;lt;port-no&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;maxRequestHeaderSize&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;16KiB&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After restarting NiFi registry the error message bumped up to our new max.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-none&quot; data-lang=&quot;none&quot;&gt;WARN 2018-05-22 08:17:52.493 dw-61 o.e.j.h.HttpParser - Header is too large &amp;gt;16384
WARN 2018-05-22 08:17:52.494 dw-61 o.e.j.h.HttpParser - bad HTTP parsed: 413 for HttpChannelOverHttp@72106d4f
{r=1,c=false,a=IDLE,uri=null}
ERROR 2018-05-22 08:17:52.585 dw-61 - GET /favicon.ico c.h.r.c.GenericExceptionMapper - Got exception: NotFoundException / message HTTP 404 Not Found
javax.ws.rs.NotFoundException: HTTP 404 Not Found&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;solution&quot;&gt;SOLUTION:&lt;/h3&gt;
&lt;p&gt;After updating it to 32KiB, I am able to get past the error.&lt;/p&gt;</content><author><name>Thomas Kreutzer</name></author><summary type="html">Assumptions:</summary></entry><entry><title type="html">Hive Phoenix Storage Handler on HDP</title><link href="http://localhost:4000/hdp/hive/2019/06/09/Hive-Phoenix-Storage-Handler-HDP.html" rel="alternate" type="text/html" title="Hive Phoenix Storage Handler on HDP" /><published>2019-06-09T05:27:29-04:00</published><updated>2019-06-09T05:27:29-04:00</updated><id>http://localhost:4000/hdp/hive/2019/06/09/Hive-Phoenix-Storage-Handler-HDP</id><content type="html" xml:base="http://localhost:4000/hdp/hive/2019/06/09/Hive-Phoenix-Storage-Handler-HDP.html">&lt;h3 id=&quot;use-case&quot;&gt;Use Case:&lt;/h3&gt;

&lt;p&gt;Recently when working on an application with a client we had a need to have fast interactions with small amounts of data but it needed to be available immediately to Hive. The synchronization was critical for another batch process that was decoupled from the interactions of the application. Yes, we could have probably handled this many ways but in the end I wanted to see if we could have the required inserts handled via the web application running on these windows servers. In a prior blog entry I talk about TLS with PowerShell which led into some of these tests.&lt;/p&gt;

&lt;h3 id=&quot;hdp-configuration&quot;&gt;HDP Configuration&lt;/h3&gt;

&lt;p&gt;In the Ambari UI we go to the &lt;strong&gt;Hive config&lt;/strong&gt; tab for the following and entered &lt;strong&gt;/usr/hdp/current/phoenix-client/phoenix-hive.jar&lt;/strong&gt; in the &lt;strong&gt;hive_env.sh&lt;/strong&gt; in two places. &lt;strong&gt;NOTE:&lt;/strong&gt; these are comma separated values and the first value &lt;strong&gt;hive-hcatalog&lt;/strong&gt; existed prior..&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/SLkCzDA.png&quot; alt=&quot;hive_env.sh&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This will open up a new panel for &lt;strong&gt;NiFi Flow Configuration&lt;/strong&gt; and click on &lt;strong&gt;CONTROLLER SERVICES&lt;/strong&gt;, this will display all the controller services defined at this level. &lt;strong&gt;NOTE:&lt;/strong&gt; this is currently being done at the root canvas &lt;strong&gt;Nifi Flow&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I also added the custom hive site property for both Hive 1.x and LLAP:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;hive.aux.jars.path=file://usr/hdp/current/phoenix-client/phoenix-hive.jar&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/q1feDJa.png&quot; alt=&quot;Hive 1.2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/DMJOplz.png&quot; alt=&quot;Hive 2.x&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After completing I restarted all hive services required and attempted the following query which failed.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yourhivedb&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;phoenix_table&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;s1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;i1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;f1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;d1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;double&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;STORED&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'org.apache.phoenix.hive.PhoenixStorageHandler'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;TBLPROPERTIES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;&quot;phoenix.table.name&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;{yourphoenixdb}.phoenix_table&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;&quot;phoenix.zookeeper.quorum&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;{removed}.com,{removed}.com,{removed}.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;&quot;phoenix.zookeeper.znode.parent&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;/hbase&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;&quot;phoenix.zookeeper.client.port&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;2181&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;&quot;phoenix.rowkeys&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;s1, i1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;&quot;phoenix.column.mapping&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;s1:s1, i1:i1, f1:f1, d1:d1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;&quot;phoenix.table.options&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;SALT_BUCKETS=10, DATA_BLOCK_ENCODING='DIFF'&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The error as follows:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-none&quot; data-lang=&quot;none&quot;&gt;Error: Error while processing statement: 
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.DDLTask. MetaException(message:org.apache.hadoop.hbase.client.RetriesExhaustedException: Can't get the location for replica 0)
(state=08S01,code=1)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Upon researching, this is a znode issue. This should have been obvious as Kerberos is enabled. It is set as &lt;strong&gt;/habse&lt;/strong&gt; and should be &lt;strong&gt;/hbase-secure&lt;/strong&gt; 
Modified Query:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yourhivedb&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;phoenix_table&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;s1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;i1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;f1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;d1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;double&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;STORED&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'org.apache.phoenix.hive.PhoenixStorageHandler'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;TBLPROPERTIES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;&quot;phoenix.table.name&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;{yourphoenixdb}.phoenix_table&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;&quot;phoenix.zookeeper.quorum&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;{removed}.com,{removed}.com,{removed}.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;&quot;phoenix.zookeeper.znode.parent&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;/hbase-secure&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;&quot;phoenix.zookeeper.client.port&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;2181&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;&quot;phoenix.rowkeys&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;s1, i1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;&quot;phoenix.column.mapping&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;s1:s1, i1:i1, f1:f1, d1:d1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;&quot;phoenix.table.options&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;SALT_BUCKETS=10, DATA_BLOCK_ENCODING='DIFF'&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now I am getting a new error:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-none&quot; data-lang=&quot;none&quot;&gt;Error: Error while processing statement: FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.DDLTask. MetaException(message:org.apache.phoenix.exception.PhoenixIOException: org.apache.hadoop.hbase.security.AccessDeniedException: Insufficient permissions for user Ã¢hive/ln112133.eh.pweh.com@HDP-DEV.PW.UTC.COM',action: scannerOpen, tableName:SYSTEM:CATALOG, family:0, column: TYPE_NAME
        at org.apache.ranger.authorization.hbase.RangerAuthorizationCoprocessor.authorizeAccess(RangerAuthorizationCoprocessor.java:551)
        at org.apache.ranger.authorization.hbase.RangerAuthorizationCoprocessor.preScannerOpen(RangerAuthorizationCoprocessor.java:955)
        at org.apache.ranger.authorization.hbase.RangerAuthorizationCoprocessor.preScannerOpen(RangerAuthorizationCoprocessor.java:855)
        at org.apache.hadoop.hbase.regionserver.RegionCoprocessorHost$50.call(RegionCoprocessorHost.java:1267)
        at org.apache.hadoop.hbase.regionserver.RegionCoprocessorHost$RegionOperation.call(RegionCoprocessorHost.java:1660)
        at org.apache.hadoop.hbase.regionserver.RegionCoprocessorHost.execOperation(RegionCoprocessorHost.java:1734)
        at org.apache.hadoop.hbase.regionserver.RegionCoprocessorHost.execOperationWithResult(RegionCoprocessorHost.java:1709)
        at org.apache.hadoop.hbase.regionserver.RegionCoprocessorHost.preScannerOpen(RegionCoprocessorHost.java:1262)
        at org.apache.hadoop.hbase.regionserver.RSRpcServices.scan(RSRpcServices.java:2418)
        at org.apache.hadoop.hbase.protobuf.generated.ClientProtos$ClientService$2.callBlockingMethod(ClientProtos.java:32385)
        at org.apache.hadoop.hbase.ipc.RpcServer.call(RpcServer.java:2150)
        at org.apache.hadoop.hbase.ipc.CallRunner.run(CallRunner.java:112)
        at org.apache.hadoop.hbase.ipc.RpcExecutor$Handler.run(RpcExecutor.java:187)
        at org.apache.hadoop.hbase.ipc.RpcExecutor$Handler.run(RpcExecutor.java:167)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is easily confirmed in Ranger to be a permission issue, if you have it configured to log. 
&lt;img src=&quot;https://i.imgur.com/8cQARc7.png&quot; alt=&quot;Ranger permissions&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I will provide the proper permissions to HIVE and re-execute:
&lt;img src=&quot;https://i.imgur.com/op2UyaT.png&quot; alt=&quot;Ranger Permissions&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/UxRKmHG.png&quot; alt=&quot;Ranger Permissions&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Also added the user access to the DB Tables for HBASE. I had attempted this with lowercase and yourphoenixdb:*, but it appears to get created all uppercase including the table name.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/vcyPucX.png&quot; alt=&quot;Ranger permissions&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/30zd86t.png&quot; alt=&quot;Ranger permissions&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Validate that our policy changes are pushed down, assuming you are using rangers audit.
&lt;img src=&quot;https://i.imgur.com/vj3wNIJ.png&quot; alt=&quot;Policy pushed to ranger&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now we have successful creation and a test select on the empty table. 
&lt;img src=&quot;https://i.imgur.com/T1frsNM.png&quot; alt=&quot;Hive Select with Phoenix&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Testing an insert through hive 1.2, results of insert are slow because of the additional overhead.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/pJBhX5l.png&quot; alt=&quot;insert&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We will connect with sql line and see if it is faster.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;c&quot;&gt;#From a host with the phoenix query server installed&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /usr/hdp/current/phoenix-server/bin/
./sqlline.py&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Itâ€™s much faster&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;3 rows selected &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.029 seconds&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The tests onn LLAP/ hive 2.x failed and the feature is not currently supported, I hope to get it working in the future and follow up.&lt;/p&gt;</content><author><name>Thomas Kreutzer</name></author><summary type="html">Use Case:</summary></entry><entry><title type="html">Create Service Account Keytabs from Active Directory</title><link href="http://localhost:4000/hadoop/security/2019/05/29/Create-Service-Account-Keytabs-AD.html" rel="alternate" type="text/html" title="Create Service Account Keytabs from Active Directory" /><published>2019-05-29T08:27:29-04:00</published><updated>2019-05-29T08:27:29-04:00</updated><id>http://localhost:4000/hadoop/security/2019/05/29/Create-Service-Account-Keytabs-AD</id><content type="html" xml:base="http://localhost:4000/hadoop/security/2019/05/29/Create-Service-Account-Keytabs-AD.html">&lt;h3 id=&quot;assumptions&quot;&gt;Assumptions:&lt;/h3&gt;

&lt;p&gt;It is assumed that you have already configured your cluster with a one-way trust to Active Directory and have an MIT kerberos installation in your cluster. It is also assumed that you have installed all kerberos client tools on your linux hosts.&lt;/p&gt;

&lt;h3 id=&quot;commands-to-create-your-keytab&quot;&gt;Commands to create your keytab:&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;ktutil
addent &lt;span class=&quot;nt&quot;&gt;-password&lt;/span&gt; service-account@REALM.COM &lt;span class=&quot;nt&quot;&gt;-k&lt;/span&gt; 1 &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; rc4-hmac
wkt service-account.keytab
quit&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Thatâ€™s it, you know should have a keytab created in the directory you are in with the name service-account.keytab. Of course you should substitute this name and account with the proper name for you configuration.&lt;/p&gt;</content><author><name>Thomas Kreutzer</name></author><summary type="html">Assumptions:</summary></entry><entry><title type="html">NiFi Keytab Credential Service and Ranger</title><link href="http://localhost:4000/nifi/security/2019/05/29/NiFi-Keytab-Credential-Service-and-Ranger.html" rel="alternate" type="text/html" title="NiFi Keytab Credential Service and Ranger" /><published>2019-05-29T08:27:29-04:00</published><updated>2019-05-29T08:27:29-04:00</updated><id>http://localhost:4000/nifi/security/2019/05/29/NiFi-Keytab-Credential-Service-and-Ranger</id><content type="html" xml:base="http://localhost:4000/nifi/security/2019/05/29/NiFi-Keytab-Credential-Service-and-Ranger.html">&lt;h3 id=&quot;about-the-keytab-credential-service&quot;&gt;About the keytab credential service:&lt;/h3&gt;

&lt;p&gt;Provides a mechanism for specifying a Keytab and a Principal that other components are able to use in order to perform authentication using Kerberos. By encapsulating this information into a Controller Service and allowing other components to make use of it (as opposed to specifying the principal and keytab directly in the processor) an administrative is able to choose which users are allowed to use which keytabs and principals. This provides a more robust security model for multi-tenant use cases.&lt;/p&gt;

&lt;h3 id=&quot;configure-the-service&quot;&gt;Configure the service&lt;/h3&gt;

&lt;p&gt;Log into the NiFi UI and click on the &lt;strong&gt;Configuration&lt;/strong&gt; icon.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/Ai3ifTb.png&quot; alt=&quot;Configuration&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This will open up a new panel for &lt;strong&gt;NiFi Flow Configuration&lt;/strong&gt; and click on &lt;strong&gt;CONTROLLER SERVICES&lt;/strong&gt;, this will display all the controller services defined at this level. &lt;strong&gt;NOTE:&lt;/strong&gt; this is currently being done at the root canvas &lt;strong&gt;Nifi Flow&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/F57hgLa.png&quot; alt=&quot;Controller Service&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On the far right hand side there will be a + sign, click this to create a new controller service.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/6BpfFNs.png&quot; alt=&quot;New Controller Service&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the filter type the word keytab, then hit enter or click &lt;strong&gt;ADD&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/9oQCJuD.png&quot; alt=&quot;Filter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This has added the service, notice the caution icon as we have not yet configured this properly.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/Anx1xwk.png&quot; alt=&quot;Keytab Credential Service&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On the far right hand side click on the &lt;strong&gt;Configure&lt;/strong&gt; icon.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/DRH0YCL.png&quot; alt=&quot;Properties&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Notice the name of the service, this is very generic and should be changed to be more specific. Otherwise it starts to become very difficult in NiFi to understand which controller services are for specific purposes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/vn296cF.png&quot; alt=&quot;Keytab Credential Service&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Note the unique ID that has been created by NiFi, we will use this later.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/UFAzITW.png&quot; alt=&quot;ID&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Since we are configuring the generic hdpprd-ingest this will be named more appropriately.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/YnhgaBy.png&quot; alt=&quot;Controller Service&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next click on &lt;strong&gt;PROPERTIES&lt;/strong&gt; to finish the configuration. 
Enter in the path to the keytab file path and the Kerberos Principal. &lt;strong&gt;NOTE:&lt;/strong&gt; the keytab should be accessible to the user running NiFi, in this case you should &lt;strong&gt;chown nifi:hadoop /path/to/keytab&lt;/strong&gt; and the permissions should be &lt;strong&gt;chmod 600 /path/to/keytab&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/lwD4iB6.png&quot; alt=&quot;Credentials&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click on OK to exit, the controller services is now configured.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/mHTFa4D.png&quot; alt=&quot;Created Service&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;security-configuration&quot;&gt;Security Configuration:&lt;/h3&gt;

&lt;p&gt;Next we will configure a set of policies in Ranger to allow a test of the controller service. This next section assumes that the users already have access to the process group and will not cover these security details. 
In the flow the processor &lt;strong&gt;FetchHBaseRow&lt;/strong&gt; requires a keytab, right click on it and click on configure.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/Rfcb6t9.png&quot; alt=&quot;FetchHbaseRow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For the &lt;strong&gt;HBase Client Service&lt;/strong&gt; we currently have no value set.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/cyKfTm1.png&quot; alt=&quot;HbaseClientService&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When clicking on the dropdown of available services, we can see that no service access has been granted.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/5Ml07E5.png&quot; alt=&quot;No Service Available&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;HBase Client Service&lt;/strong&gt; will use the keytab, in this case we will create a new service. &lt;strong&gt;NOTE:&lt;/strong&gt; This will create a service in the scope of the process group level.
I am renaming my service&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FROM:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/2QXymjr.png&quot; alt=&quot;From&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TO:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/U7xcxDY.png&quot; alt=&quot;To&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next click on the arrow to configure, when asked to save changes click yes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/RpA8kP5.png&quot; alt=&quot;Configure&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This takes you to the services window, click on the configure icon to edit your controller service and notice the Kerberos Credentials Service is not configured.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/ZsuTIi7.png&quot; alt=&quot;No Value Set&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Clicking on the drop down displays the fact that a service is configured but not available to my user. NOTE: the id number matches the one previously mentioned in this article.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/gyP2hCf.png&quot; alt=&quot;Not Available&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In Ranger we will add the following entry to the policy we are configuring for this group. 
&lt;strong&gt;Format Mask&lt;/strong&gt; = /controller-services/{controller unique identifier}
&lt;strong&gt;Value&lt;/strong&gt; = /controller-services/612a6a17-0168-XXXX-XXXX-XXXXXXX506a0&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/v4Itj1D.png&quot; alt=&quot;Ranger&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once the policies have refreshed we now have access to the service. Pleas select the service.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/ggnEW8A.png&quot; alt=&quot;Configured&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Configure the rest of the parameters required, in this case for HBase it is the location to the core-site.xml, hdfs-site.xml and hbase-site.xml.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/L6sUwDT.png&quot; alt=&quot;Final Configurations&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Enable the service and test the processor, and we have success.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/1eFE38T.png&quot; alt=&quot;Success&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;other-considerations&quot;&gt;Other Considerations&lt;/h3&gt;

&lt;p&gt;If you provide access to a user for the keytab credential service with read/write, they do have full access to the service. This means they can view and change the configuration. If you intend to use this globally as a one-time setup and provide this to process group users it would require you to add this to a policy with read only. There is always still an option for an administrator to set these up at the process group level, however this could also become difficult to manage. Many times groups can just configure these settings within their own process group putting control in the hands of the developers.&lt;/p&gt;</content><author><name>Thomas Kreutzer</name></author><summary type="html">About the keytab credential service:</summary></entry><entry><title type="html">NiFi Two-Way TLS/SSL with Powershell and Windows</title><link href="http://localhost:4000/nifi/security/2019/05/24/NiFi-Two-Way-TLS-with-Powershell-and-Windows.html" rel="alternate" type="text/html" title="NiFi Two-Way TLS/SSL with Powershell and Windows" /><published>2019-05-24T15:57:29-04:00</published><updated>2019-05-24T15:57:29-04:00</updated><id>http://localhost:4000/nifi/security/2019/05/24/NiFi-Two-Way-TLS-with-Powershell-and-Windows</id><content type="html" xml:base="http://localhost:4000/nifi/security/2019/05/24/NiFi-Two-Way-TLS-with-Powershell-and-Windows.html">&lt;p&gt;Recently I worked on a project were a Windows platform needed to communicate to a Restful API hosted on NiFi. Part of the security requirements involved implementation of two-way or mutual TLS and the application running on windows was restricted to using Powershell. This blog article assumes you have basic knowledge with configurations for JAVA keystores, truststores and creation of certificates, they will not be covered in detail. I will cover how Powersehll was able to connect and send secured requests to our target application. It is assumed the clientâ€™s certificates have already been created.&lt;/p&gt;

&lt;p&gt;In this example I was provided a keystore from the client server, from this I will export the required formats we will use for our configurations.&lt;/p&gt;

&lt;h3 id=&quot;convert-jks-into-p12-and-crt&quot;&gt;Convert .JKS into .p12 and .crt:&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;keytool &lt;span class=&quot;nt&quot;&gt;-importkeystore&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-srckeystore&lt;/span&gt; mykeystore.jks &lt;span class=&quot;nt&quot;&gt;-destkeystore&lt;/span&gt; client.p12 &lt;span class=&quot;nt&quot;&gt;-srcalias&lt;/span&gt; youralias -
srcstoretype jks &lt;span class=&quot;nt&quot;&gt;-deststoretype&lt;/span&gt; pkcs12
openssl pkcs12 &lt;span class=&quot;nt&quot;&gt;-in&lt;/span&gt; client.p12 &lt;span class=&quot;nt&quot;&gt;-out&lt;/span&gt; client.pem
openssl x509 &lt;span class=&quot;nt&quot;&gt;-outform&lt;/span&gt; der &lt;span class=&quot;nt&quot;&gt;-in&lt;/span&gt; client.pem &lt;span class=&quot;nt&quot;&gt;-out&lt;/span&gt; client.crt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;import-the-p12-file-into-windows-certificate-store&quot;&gt;Import the .p12 file into windows certificate store.&lt;/h3&gt;
&lt;p&gt;On your windows machine click search and type in cert
Click on Manage user certificates&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/5fhbtrY.png&quot; alt=&quot;Certificate Manager&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This opens up the certificate manager, click on &lt;strong&gt;Personal â€“&amp;gt; Certificates&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/A4OGXx9.png&quot; alt=&quot;Personal Certificate&quot; /&gt;&lt;/p&gt;

&lt;p&gt;With Certificates highlighted click on &lt;strong&gt;Action â€“&amp;gt; All Tasks â€“&amp;gt; Import..&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/JBi9bJr.png&quot; alt=&quot;All Tasks&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The next screen will have Current User defaulted, it cannot be changed as we are editing for current user. Just click &lt;strong&gt;Next&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/iquzNhZ.png&quot; alt=&quot;Certificate Import&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On the next screen click browse, you will select your .p12 file that was created in the earlier steps. In order to do so you must also change the filter so that it shows files with the .p12 extension.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/LExId7X.png&quot; alt=&quot;Browse File&quot; /&gt;
&lt;img src=&quot;https://i.imgur.com/VMEqOOv.png&quot; alt=&quot;iFile Format&quot; /&gt;&lt;/p&gt;

&lt;p&gt;With the proper &lt;strong&gt;.p12&lt;/strong&gt; file selected, click next.&lt;/p&gt;

&lt;p&gt;![File Selected]https://i.imgur.com/m7VFJ8p.png)&lt;/p&gt;

&lt;p&gt;On the following screen enter the password and click next.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/I2l3Y6t.png&quot; alt=&quot;Password&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On the following screen accept the defaults by clicking next.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/3rpAouG.png&quot; alt=&quot;Accept Defaults&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click finish on the last screen&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/vJkS9jd.png&quot; alt=&quot;Finish&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Your .p12 certificate is installed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/tj0rZyA.png&quot; alt=&quot;p12 Installed&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;nifi-configuration&quot;&gt;NiFi Configuration:&lt;/h2&gt;
&lt;p&gt;The NiFi configuration of the processor assumes you have a properly set up truststore with the certificate the client will be sending installed. We are using a StandardRestrictedSSLContextService defined as follows.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/WFinG4G.png&quot; alt=&quot;StandardRestrictedSSLContextService&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We also use a StandardHTTPContextMap in NiFi with the following default configurations. 
&lt;img src=&quot;https://i.imgur.com/4BzkVwd.png&quot; alt=&quot;StandardHTTPContextMap&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Finally we have the HandleHTTPRequest processor with a port that is not being used, in our case 9092 for this test. We configured our Rest Endpoint and finally we have selected Need Authentication which will required two-way SSL.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/ZikLem0.png&quot; alt=&quot;StandardHTTPContextMap&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;execution-of-powershell&quot;&gt;Execution of powershell:&lt;/h2&gt;
&lt;p&gt;We have two different ways that we can execute the powershell command. The first method is to use the .crt file which would need to be deployed on the Windows machine. The first method is as follows.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$Cert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; New-Object System.Security.Cryptography.X509Certificates.X509Certificate2
&lt;span class=&quot;nv&quot;&gt;$Cert&lt;/span&gt;.Import&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;D:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\p&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ath&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\c&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;lient.crt&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Net.ServicePointManager]::SecurityProtocol &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Net.SecurityProtocolType]::Tls12
Invoke-WebRequest &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-UseBasicParsing&lt;/span&gt; https://yourhost:9092/endpoint/hbase &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-ContentType&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;application/json&quot;&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-Method&lt;/span&gt; POST &lt;span class=&quot;nt&quot;&gt;-Body&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;{'name':'Thomas','email':'none@gmail.com'}&quot;&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-Certificate&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Cert&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The second method is to use the thumbprint, first we will demo how to get the thumbprint in powershell.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$Cert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; New-Object System.Security.Cryptography.X509Certificates.X509Certificate2
&lt;span class=&quot;nv&quot;&gt;$Cert&lt;/span&gt;.Import&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;D:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\p&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ath&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\c&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;lient.crt&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Write-Output &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$cert&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/MIlrzYt.png&quot; alt=&quot;Thumbprint Display&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Using the thumbprint in your powershell command.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Net.ServicePointManager]::SecurityProtocol &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Net.SecurityProtocolType]::Tls12
Invoke-WebRequest &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-UseBasicParsing&lt;/span&gt; https://yourhost:9092/endpoint/hbase &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-ContentType&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;application/json&quot;&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-Method&lt;/span&gt; POST &lt;span class=&quot;nt&quot;&gt;-Body&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;{'name':'Thomas','email':'none@gmail.com'}&quot;&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-CertificateThumbprint&lt;/span&gt; 19XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can also get the thumbprint and pass it right from the cert.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$Cert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; New-Object System.Security.Cryptography.X509Certificates.X509Certificate2
&lt;span class=&quot;nv&quot;&gt;$Cert&lt;/span&gt;.Import&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;D:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\p&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ath&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\c&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;lient.crt&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Net.ServicePointManager]::SecurityProtocol &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Net.SecurityProtocolType]::Tls12
Invoke-WebRequest &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-UseBasicParsing&lt;/span&gt; https://yourhost:9092/endpoint/hbase &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-ContentType&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;application/json&quot;&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-Method&lt;/span&gt; POST &lt;span class=&quot;nt&quot;&gt;-Body&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;{'name':'Thomas','email':'none@gmail.com'}&quot;&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-CertificateThumbprint&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Cert&lt;/span&gt;.thumbprint&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;All of the above methods will give you success.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/KzIzoBz.png&quot; alt=&quot;200 OK&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can also see the file has gone through NiFi.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/d3hNa6L.png&quot; alt=&quot;Nifi Success&quot; /&gt;&lt;/p&gt;</content><author><name>Thomas Kreutzer</name></author><summary type="html">Recently I worked on a project were a Windows platform needed to communicate to a Restful API hosted on NiFi. Part of the security requirements involved implementation of two-way or mutual TLS and the application running on windows was restricted to using Powershell. This blog article assumes you have basic knowledge with configurations for JAVA keystores, truststores and creation of certificates, they will not be covered in detail. I will cover how Powersehll was able to connect and send secured requests to our target application. It is assumed the clientâ€™s certificates have already been created.</summary></entry></feed>